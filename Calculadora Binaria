#include <stdio.h>
#include <string.h>
#include <stdlib.h>

// Conversão de decimais
void DecimalBinario(int num1) {
    if (num1 == 0) {
        printf("%d", num1);
    } else {
        DecimalBinario(num1 / 2);
        printf("%d", num1 % 2);
    }
}

void DecimalOctal(int num1) {
    if (num1 == 0) {
        printf("%d", num1);
    } else {
        DecimalOctal(num1 / 8);
        printf("%d", num1 % 8);
    }
}

void DecimalHexadecimal(int num1) {
    printf("%X\n", num1);
}

// Conversão de binários
int BinarioDecimal (const char *num1) {
    int decimal = 0;
    for (int i = 0; num1[i] != '\0'; i++) {
        if (num1[i] == '1') {
            decimal = decimal * 2 + 1;
        } else if (num1[i] == '0') {
            decimal = decimal * 2;
        } else {
            printf("Invalido\n");
            return -1;
        }
    }
    return decimal;
}

void BinarioOctal (const char *num1) { //binario>decimal>octal
    int decimal = BinarioDecimal(num1);
    if (decimal == -1) return;

    DecimalOctal(decimal);
    printf("\n");
}

void BinarioHexadecimal (const char *num1) { //binario>decimal>hexadecimal
    int decimal = BinarioDecimal(num1);
    if (decimal == -1) return;

    DecimalHexadecimal(decimal);
}

// Conversão de octais
int OctalDecimal (const char *num1) {
    int decimal = 0;
    for (int i = 0; num1[i] != '\0'; i++) {
        if (num1[i] < '0' || num1[i] > '7') {
            printf("Invalido\n");
            return -1;
        }
        decimal = decimal * 8 + (num1[i] - '0');
    }
    return decimal;
}

void OctalBinario (const char *num1) { //octal>decimal>binario
    int decimal = OctalDecimal(num1);
    if (decimal == -1) return;

    DecimalBinario(decimal);
    printf("\n");
}

void OctalHexadecimal (const char *num1) { //octal>decimal>hexadecimal
    int decimal = OctalDecimal(num1);
    if (decimal == -1) return;

    DecimalHexadecimal(decimal);
}

// Conversão de hexadecimais
int HexadecimalDecimal (const char *num1) {
    int decimal = 0;
    for (int i = 0; num1[i] != '\0'; i++) {
        char c = num1[i];
        int valor;

        if (c >= '0' && c <= '9') {
            valor = c - '0';
        } else if (c >= 'A' && c <= 'F') {
            valor = c - 'A' + 10;
        } else if (c >= 'a' && c <= 'f') {
            valor = c - 'a' + 10;
        } else {
            printf("Invalido\n");
            return -1;
        }
        decimal = decimal * 16 + valor;
    }
    return decimal;
}

void HexadecimalBinario (const char *num1) { //hexadecimal>decimal>binario
    int decimal = HexadecimalDecimal(num1);
    if (decimal == -1) return;

    DecimalBinario(decimal);
    printf("\n");
}

void HexadecimalOctal (const char *num1) { //hexadecimal>decimal>octal
    int decimal = HexadecimalDecimal(num1);
    if (decimal == -1) return;

    DecimalOctal(decimal);
    printf("\n");
}

// Soma de números binários
void somaBin(const char *a, const char *b) {
    int decA = 0, decB = 0;

    for (int i = 0; a[i] != '\0'; i++) { //num1=a -> binario>decimal 
        if (a[i] == '1') {
            decA = decA * 2 + 1;
        } else if (a[i] == '0') {
            decA = decA * 2;
        } else {
            printf("Invalido\n");
            return;
        }
    }
    for (int i = 0; b[i] != '\0'; i++) { //num2=b -> binario>decimal
        if (b[i] == '1') {
            decB = decB * 2 + 1;
        } else if (b[i] == '0') {
            decB = decB * 2;
        } else {
            printf("Invalido\n");
            return;
        }
    }
    int resultado = decA + decB;
    DecimalBinario(resultado); //decimal>binario
    printf("\n");
}

// Subtração de números binários
void subtracaoBin (const char *a, const char *b) { //binario>decimal
    int decA = 0, decB = 0;

    for (int i = 0; a[i] != '\0'; i++) {
        if (a[i] == '1') {
            decA = decA * 2 + 1;
        } else if (a[i] == '0') {
            decA = decA * 2;
        } else {
            printf("Invalido\n");
            return;
        }
    }
    for (int i = 0; b[i] != '\0'; i++) { //binario>decimal
        if (b[i] == '1') {
            decB = decB * 2 + 1;
        } else if (b[i] == '0') {
            decB = decB * 2;
        } else {
            printf("Invalido\n");
            return;
        }
    }
    if (decB > decA) {
        printf("o resultado sera um numero negativo.\n");
        return;
    }
    int resultado = decA - decB;
    DecimalBinario(resultado); //decimal>binario
    printf("\n");
}

// Multiplicação de números binários
void multiplicacaoBin (const char *a, const char *b) {
    int decA = 0, decB = 0;

    for (int i = 0; a[i] != '\0'; i++) { //binario>decimal
        if (a[i] == '1') {
            decA = decA * 2 + 1;
        } else if (a[i] == '0') {
            decA = decA * 2;
        } else {
            printf("Invalido\n");
            return;
        }
    }
    for (int i = 0; b[i] != '\0'; i++) { //binario>decimal
        if (b[i] == '1') {
            decB = decB * 2 + 1;
        } else if (b[i] == '0') {
            decB = decB * 2;
        } else {
            printf("Invalido\n");
            return;
        }
    }
    int resultado = decA * decB;
    DecimalBinario(resultado); //decimal>binario
    printf("\n");
}

// Divisão de números binários
void divisaoBin (const char *a, const char *b) {
    int decA = 0, decB = 0;
    for (int i = 0; a[i] != '\0'; i++) { //binario>decimal
        if (a[i] == '1') {
            decA = decA * 2 + 1;
        } else if (a[i] == '0') {
            decA = decA * 2;
        } else {
            printf("Invalido\n");
            return;
        }
    }
    for (int i = 0; b[i] != '\0'; i++) { //binario>decimal
        if (b[i] == '1') {
            decB = decB * 2 + 1;
        } else if (b[i] == '0') {
            decB = decB * 2;
        } else {
            printf("Invalido\n");
            return;
        }
    }
    if (decB == 0) {
        printf("Numero Invalido\n");
        return;
    }
    int resultado = decA / decB;
    DecimalBinario(resultado); //decimal>binario
    printf("\n");
}

int main(void) {
    int escolha_menu, escolha_base, escolha_base2;
    char num1[100], num2[100];

    printf("Calculadora Binaria\n\n");
    printf("Selecione o processo que deseja realizar:\n");
    printf("1. Conversao de bases              2. Operacoes com numeros binarios\n");
    scanf("%d", &escolha_menu);

    if (escolha_menu == 1) {
        printf("Selecione a base pertencente ao numero que deseja converter:\n");
        printf("1. Decimal, 2. Binario, 3. Octal, 4. Hexadecimal\n");
        scanf("%d", &escolha_base);
        switch (escolha_base) {
            case 1:
                printf("Selecione a base que sera convertida:\n");
                printf("1. Binario, 2. Octal, 3. Hexadecimal\n");
                scanf("%d", &escolha_base2);
                int decimal;
                printf("Digite o numero: ");
                scanf("%d", &decimal);
                if (escolha_base2 == 1) {
                    DecimalBinario(decimal);
                    printf("\n");
                } else if (escolha_base2 == 2) {
                    DecimalOctal(decimal);
                    printf("\n");
                } else if (escolha_base2 == 3) {
                    DecimalHexadecimal(decimal);
                } else {
                    printf("Insira uma resposta valida.\n");
                }
                break;
            case 2:
                printf("Selecione a base que sera convertida:\n");
                printf("1. Decimal, 2. Octal, 3. Hexadecimal\n");
                scanf("%d", &escolha_base2);
                printf("Digite o numero: ");
                scanf("%s", num1);
                if (escolha_base2 == 1) {
                    int result = BinarioDecimal(num1);
                    if (result != -1) printf("%d\n", result);
                } else if (escolha_base2 == 2) {
                    BinarioOctal(num1);
                } else if (escolha_base2 == 3) {
                    BinarioHexadecimal(num1);
                } else {
                    printf("Insira uma resposta valida.\n");
                }
                break;
            case 3:
                printf("Selecione a base que sera convertida:\n");
                printf("1. Decimal, 2. Binario, 3. Hexadecimal\n");
                scanf("%d", &escolha_base2);
                printf("Digite o numero: ");
                scanf("%s", num1);
                if (escolha_base2 == 1) {
                    int result = OctalDecimal(num1);
                    if (result != -1) printf("%d\n", result);
                } else if (escolha_base2 == 2) {
                    OctalBinario(num1);
                } else if (escolha_base2 == 3) {
                    OctalHexadecimal(num1);
                } else {
                    printf("Insira uma resposta valida.\n");
                }
                break;
            case 4:
                printf("Selecione a base que sera convertida:\n");
                printf("1. Decimal, 2. Binario, 3. Octal\n");
                scanf("%d", &escolha_base2);
                printf("Digite o numero: ");
                scanf("%s", num1);
                if (escolha_base2 == 1) {
                    int result = HexadecimalDecimal(num1);
                    if (result != -1) printf("%d\n", result);
                } else if (escolha_base2 == 2) {
                    HexadecimalBinario(num1);
                } else if (escolha_base2 == 3) {
                    HexadecimalOctal(num1);
                } else {
                    printf("Insira uma resposta valida.\n");
                }
                break;
            default:
                printf("Operacao Invalida\n");
        }
    } else if (escolha_menu == 2) {
        printf("Selecione a operacao que deseja realizar:\n");
        printf("1. Soma, 2. Subtracao, 3. Multiplicacao, 4. Divisao\n");
        scanf("%d", &escolha_base);
        switch (escolha_base) {
            case 1:
                printf("Informe o primeiro numero da soma: \n");
                scanf("%s", num1);
                printf("Informe o segundo numero da soma: \n");
                scanf("%s", num2);
                somaBin(num1, num2);
                break;
            case 2:
                printf("Informe o primeiro numero da subtracao: \n");
                scanf("%s", num1);
                printf("Informe o segundo numero da subtracao: \n");
                scanf("%s", num2);
                subtracaoBin(num1, num2);
                break;
            case 3:
                printf("Informe o primeiro numero da multiplicacao: \n");
                scanf("%s", num1);
                printf("Informe o segundo numero da multiplicacao: \n");
                scanf("%s", num2);
                multiplicacaoBin(num1, num2);
                break;
            case 4:
                printf("Informe o primeiro numero da divisao: \n");
                scanf("%s", num1);
                printf("Informe o segundo numero da divisao: \n");
                scanf("%s", num2);
                divisaoBin(num1, num2);
                break;
            default:
                printf("Operacao Invalida\n");
        }
    } else {
        printf("Operacao Invalida\n");
    }

    return 0;
}
